name: Test and Package
on:
  push:
    branches:
      - master
    tag:
  pull_request:

jobs:
  lint:
    name: Check Source Style
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{matrix.python}}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install environment
      run: |
        pip install -U setuptools wheel

    - name: Get Pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
      shell: bash

    - name: Cache Pip wheels
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: py38-lint-pip

    - name: Install package
      run: |
        pip install -e '.[dev]'

    - name: Run lint
      run: |
        # Flake8 problem matcher & transform regex from https://github.com/TrueBrain/actions-flake8
        echo "::add-matcher::.github/flake8-matcher.json"
        set -o pipefail
        flake8 |sed -r 's/: ([^W][0-9][0-9][0-9])/: error: \1/;s/: (W[0-9][0-9][0-9])/: warning: \1/'
        echo "::remove-matcher owner=flake8::"

  test:
    name: Test with Python ${{matrix.python}} on ${{matrix.platform}}
    runs-on: ${{matrix.platform}}-latest
    strategy:
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        python:
        - 3.6
        - 3.7
        - 3.8

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{matrix.python}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python}}

    - name: Install environment
      run: |
        pip install -U setuptools wheel

    - name: Get Pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
      shell: bash

    - name: Cache Pip wheels
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ matrix.platform }}-py${{ matrix.python }}-pip

    - name: Install package
      run: |
        pip install -e '.[dev,test,blosc]'

    - name: Run tests
      run: python -m pytest --cov=binpickle --cov-report=xml tests

    - name: Upload coverage
      uses: codecov/codecov-action@v1

  no-extras:
    name: Test without extras
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{matrix.python}}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install environment
      run: |
        pip install -U setuptools wheel

    - name: Get Pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
      shell: bash

    - name: Cache Pip wheels
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: no-extras-pip

    - name: Install package
      run: |
        pip install -e '.[dev,test]'

    - name: Run tests
      run: python -m pytest --cov=binpickle --cov-report=xml tests

    - name: Upload coverage
      uses: codecov/codecov-action@v1

  sdist:
    name: Build Source Packages
    runs-on: ubuntu-latest
    needs: [test, lint, no-extras]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch Git tags
      run: git fetch --tags

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python deps
      run: pip install -U pip setuptools wheel

    - name: Build source dist
      run: python setup.py sdist

    - name: Build wheel
      run: python setup.py bdist_wheel

    - name: Save archive
      uses: actions/upload-artifact@v1
      with:
        name: pypi-pkgs
        path: dist

  conda:
    name: Build Conda Packages on ${{matrix.platform}}
    runs-on: ${{matrix.image}}
    needs: sdist
    strategy:
      fail-fast: false
      matrix:
        platform:
        - macos
        - windows
        - ubuntu
        include:
        - platform: macos
          condaplat: osx-64
          image: macos-latest
        - platform: ubuntu
          condaplat: linux-64
          image: ubuntu-latest
        - platform: windows
          condaplat: win-64
          image: windows-2016

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch Git tags
      run: git fetch --tags

    - name: Fix Conda Perms
      if: runner.os == 'macOS'
      run: sudo chown -R $USER $CONDA/

    - name: Set Conda path
      run: echo "::add-path::$CONDA/condabin"
      shell: bash

    - name: Install Conda deps
      run: |
        conda update -qy --all
        conda install -qy conda-build

    - name: Build Conda packages
      run: conda build -c conda-forge conda

    - name: Copy Conda packages
      run: |
        $ddir = (Join-Path dist ${{matrix.condaplat}})
        $bld = (Join-Path $env:CONDA conda-bld ${{matrix.condaplat}})
        New-Item -Type Directory $ddir
        Get-ChildItem $bld |Copy-Item -Destination $ddir
        Get-ChildItem -Recurse dist
      shell: pwsh

    - name: Upload packages
      uses: actions/upload-artifact@v1
      with:
        name: conda-pkgs
        path: dist
